//-- Libraries Included --------------------------------------------------------------
  #include <ESP8266WiFi.h>
  #include <Wire.h>
  #include <RTClib.h>                         // Подключаем библиотеку Wire
//------------------------------------------------------------------------------------
  // Define I/O Pins
  #define     LED0      2           // WIFI Module LED
  #define     R         D0          // Connectivity With Client #1
  #define     G         D3          // Connectivity With Client #2
  #define     Y         D4          // Connectivity ReInitiate Button
  #define     R1        D5          // Connectivity With Client #1
  #define     Y1        D6          // Connectivity With Client #2
  #define     G1        D7          // Connectivity ReInitiate Button
//------------------------------------------------------------------------------------
  // Authentication Variables
  const char*       TKDssid = "ESPsoftAP_01";              // SERVER WIFI NAME
  const char*       TKDpassword = "pass0077";          // SERVER PASSWORD
//------------------------------------------------------------------------------------
 WiFiServer  TKDServer(9001);      // THE SERVER AND THE PORT NUMBER
  WiFiClient  TKDClient[4];     // THE SERVER CLIENTS
//====================================================================================
RTC_DS3231 rtc;                     // Создаем объект rtc

  void setup()
  {
    // Setting The Serial Port
    Serial.begin(115200);           // Computer Communication
    Wire.begin();                   // chtobq nebqlo "165:165:85"
    
    // Setting The Mode Of Pins
    pinMode(LED0, OUTPUT);          // WIFI OnBoard LED Light
    pinMode(D0, OUTPUT);          // Indicator For Client #1 Connectivity
    pinMode(D3, OUTPUT);          // Indicator For Client #2 Connectivity
    pinMode(D4, OUTPUT);          // Indicator For Client #2 Connectivity
    pinMode(D5, OUTPUT);          // Indicator For Client #1 Connectivity
    pinMode(D6, OUTPUT);          // Indicator For Client #2 Connectivity
    pinMode(D7, OUTPUT);          // Indicator For Client #2 Connectivity
    
    // Print Message Of I/O Setting Progress
    Serial.println();
    Serial.println("I/O Pins Modes Set .... Done");

     // Автоматическая установка времени при загрузке скетча
   rtc.begin();
   rtc.adjust(DateTime(F(__DATE__), F(__TIME__)));

  // Ручная установка времени
   //rtc.adjust(DateTime(2020, 03, 13, 14, 0, 0));

    // Setting Up A Wifi Access Point
    SetWifi("ESPsoftAP_01", "");
    
  }

//====================================================================================
  
  void loop()
  {

    IsClients();
    //delay (5000);
    
  }

//====================================================================================
  
  void SetWifi(char* TKDssid, char* TKDpassword)
  {
    // Stop Any Previous WIFI
    WiFi.disconnect();

    // Setting The Wifi Mode
    WiFi.mode(WIFI_AP_STA);
    Serial.println("WIFI Mode : AccessPoint Station");
       
    // Starting The Access Point
    WiFi.softAP(TKDssid, TKDpassword);
    Serial.println("WIFI < " + String(TKDssid) + " > ... Started");
    
    // Wait For Few Seconds
    delay(1000);
    
    // Getting Server IP
    IPAddress IP = WiFi.softAPIP();
    
    // Printing The Server IP Address
    Serial.print("AccessPoint IP : ");
    Serial.println(IP);

    // Starting Server
    TKDServer.begin();
    Serial.println("Server Started");
  }

//====================================================================================

  void IsClients()
  {

 //kontrollitakse kliendilt WiFi parooli, kui kõik klappib, 
 //siis saab edasi tsüklile 
 boolean result = WiFi.softAP(TKDssid, TKDpassword);
    if(result == true)
    {
if(TKDServer.hasClient())
   {
      WiFiClient TKDClient = TKDServer.available();

    if(TKDClient.available())
    {

      String Message = TKDClient.readStringUntil('\r');
          // Here We Print The Message On The Screen
          DateTime now = rtc.now();
  Serial.print(now.day(), DEC);       // Отправка в Serial Port дня
  Serial.print('/');                  // Отправка текста в Serial Port 
  Serial.print(now.month(), DEC);     // Отправка в Serial Port месяц 
  Serial.print('/');                  // Отправка текста в Serial Port
  Serial.print(now.year(), DEC);      // Отправка в Serial Port год 
  Serial.print(' ');                  // Отправка текста в Serial Port
  Serial.print(now.hour(), DEC);      // Отправка в Serial Port час
  Serial.print(':');                  // Отправка текста в Serial Port
  Serial.print(now.minute(), DEC);    // Отправка в Serial Port минуты
  Serial.print(' ');                  // Отправка текста в Serial Port
  Serial.print('-');                  // Отправка текста в Serial Port
  Serial.print(' ');                  // Отправка текста в Serial Port
  Serial.println(Message);
          // Here We Reply To The Client With A Message
          TKDClient.print("\nWe Got Your Message");
          TKDClient.flush();
          
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(3000);
    digitalWrite(R, HIGH);
    digitalWrite(Y, HIGH);
    digitalWrite(G, LOW);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(500);
    digitalWrite(R, LOW);
    digitalWrite(Y, LOW);
    digitalWrite(G, HIGH);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(1000);
    digitalWrite(R, LOW);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(250);
    digitalWrite(R, LOW);
    digitalWrite(Y, LOW);
    digitalWrite(G, HIGH);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(250);
    digitalWrite(R, LOW);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(250);
    digitalWrite(R, LOW);
    digitalWrite(Y, LOW);
    digitalWrite(G, HIGH);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(250);
    digitalWrite(R, LOW);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(250);
    digitalWrite(R, LOW);
    digitalWrite(Y, LOW);
    digitalWrite(G, HIGH);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(250);
    digitalWrite(R, LOW);
    digitalWrite(Y, HIGH);
    digitalWrite(G, LOW);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(500);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(2000);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, HIGH);
    digitalWrite(G1, LOW);
    delay(500);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, LOW);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, HIGH);
    delay(1000);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, LOW);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(250);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, LOW);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, HIGH);
    delay(250);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, LOW);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(250);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, LOW);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, HIGH);
    delay(250);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, LOW);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(250);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, LOW);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, HIGH);
    delay(250);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, LOW);
    digitalWrite(Y1, HIGH);
    digitalWrite(G1, LOW);
    delay(500);
    }
   }else
   {
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(1000);
    digitalWrite(R, HIGH);
    digitalWrite(Y, HIGH);
    digitalWrite(G, LOW);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(500);
    digitalWrite(R, LOW);
    digitalWrite(Y, LOW);
    digitalWrite(G, HIGH);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(500);
    digitalWrite(R, LOW);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(250);
    digitalWrite(R, LOW);
    digitalWrite(Y, LOW);
    digitalWrite(G, HIGH);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(250);
    digitalWrite(R, LOW);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(250);
    digitalWrite(R, LOW);
    digitalWrite(Y, LOW);
    digitalWrite(G, HIGH);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(250);
    digitalWrite(R, LOW);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(250);
    digitalWrite(R, LOW);
    digitalWrite(Y, LOW);
    digitalWrite(G, HIGH);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(250);
    digitalWrite(R, LOW);
    digitalWrite(Y, HIGH);
    digitalWrite(G, LOW);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(500);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(1000);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, HIGH);
    digitalWrite(Y1, HIGH);
    digitalWrite(G1, LOW);
    delay(500);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, LOW);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, HIGH);
    delay(500);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, LOW);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(250);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, LOW);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, HIGH);
    delay(250);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, LOW);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(250);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, LOW);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, HIGH);
    delay(250);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, LOW);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, LOW);
    delay(250);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, LOW);
    digitalWrite(Y1, LOW);
    digitalWrite(G1, HIGH);
    delay(250);
    digitalWrite(R, HIGH);
    digitalWrite(Y, LOW);
    digitalWrite(G, LOW);
    digitalWrite(R1, LOW);
    digitalWrite(Y1, HIGH);
    digitalWrite(G1, LOW);
    delay(500);
    }
    }
  }
